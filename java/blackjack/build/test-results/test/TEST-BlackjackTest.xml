<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="BlackjackTest" tests="55" skipped="0" failures="2" errors="0" timestamp="2021-11-20T16:13:22" hostname="WenRuis-MacBook.local" time="0.176">
  <properties/>
  <testcase name="blackjackWithKingAceSecond" classname="BlackjackTest" time="0.097"/>
  <testcase name="firstTurnWithAceAceAndDealerAce" classname="BlackjackTest" time="0.007"/>
  <testcase name="firstTurnWithTwoNineAndDealerQueen" classname="BlackjackTest" time="0.001"/>
  <testcase name="firstTurnWithKingSevenAndDealerAce" classname="BlackjackTest" time="0.0"/>
  <testcase name="firstTurnWithTwoTenAndDealerQueen" classname="BlackjackTest" time="0.0"/>
  <testcase name="firstTurnWithTwoTenAndDealerSeven" classname="BlackjackTest" time="0.001"/>
  <testcase name="firstTurnWithKingTenAndDealerAce" classname="BlackjackTest" time="0.0"/>
  <testcase name="firstTurnWithFourTenAndDealerQueen" classname="BlackjackTest" time="0.0"/>
  <testcase name="firstTurnWithFourTenAndDealerSeven" classname="BlackjackTest" time="0.0"/>
  <testcase name="correctParsesEight" classname="BlackjackTest" time="0.005"/>
  <testcase name="correctParsesQueen" classname="BlackjackTest" time="0.0"/>
  <testcase name="correctParsesSeven" classname="BlackjackTest" time="0.0"/>
  <testcase name="correctParsesThree" classname="BlackjackTest" time="0.0"/>
  <testcase name="firstTurnWithJackJackAndDealerAce" classname="BlackjackTest" time="0.001"/>
  <testcase name="firstTurnWithFiveTenAndDealerKing" classname="BlackjackTest" time="0.0"/>
  <testcase name="firstTurnWithEightTenAndDealerAce" classname="BlackjackTest" time="0.002"/>
  <testcase name="blackjackWithJackAceSecond" classname="BlackjackTest" time="0.001"/>
  <testcase name="firstTurnWithSixTenAndDealerAce" classname="BlackjackTest" time="0.0"/>
  <testcase name="firstTurnWithSixTenAndDealerSix" classname="BlackjackTest" time="0.0"/>
  <testcase name="firstTurnWithThreeTenAndDealerSix" classname="BlackjackTest" time="0.001"/>
  <testcase name="noBlackjackWithTwoFigures" classname="BlackjackTest" time="0.0"/>
  <testcase name="firstTurnWithTwoTwoAndDealerAce" classname="BlackjackTest" time="0.0"/>
  <testcase name="firstTurnWithAceKingAndDealerQueen" classname="BlackjackTest" time="0.001"/>
  <testcase name="firstTurnWithTwoEightAndDealerTwo" classname="BlackjackTest" time="0.027">
    <failure message="org.junit.ComparisonFailure: expected:&lt;&quot;[H]&quot;&gt; but was:&lt;&quot;[S]&quot;&gt;" type="org.junit.ComparisonFailure">org.junit.ComparisonFailure: expected:&lt;&quot;[H]&quot;&gt; but was:&lt;&quot;[S]&quot;&gt;
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at BlackjackTest.firstTurnWithTwoEightAndDealerTwo(BlackjackTest.java:332)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$2.run(TestWorker.java:176)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
</failure>
  </testcase>
  <testcase name="firstTurnWithKingKingAndDealerAce" classname="BlackjackTest" time="0.0"/>
  <testcase name="firstTurnWithJackAceAndDealerAce" classname="BlackjackTest" time="0.0"/>
  <testcase name="firstTurnWithFiveFiveAndAce" classname="BlackjackTest" time="0.0"/>
  <testcase name="noBlackjackWithKingAndFive" classname="BlackjackTest" time="0.0"/>
  <testcase name="firstTurnWithTwoTenAndDealerSix" classname="BlackjackTest" time="0.006"/>
  <testcase name="firstTurnWithFiveTenAndDealerSeven" classname="BlackjackTest" time="0.0"/>
  <testcase name="blackjackWithTenAceSecond" classname="BlackjackTest" time="0.001"/>
  <testcase name="firstTurnWithTwoTwoAndDealerFive" classname="BlackjackTest" time="0.001">
    <failure message="org.junit.ComparisonFailure: expected:&lt;&quot;[H]&quot;&gt; but was:&lt;&quot;[S]&quot;&gt;" type="org.junit.ComparisonFailure">org.junit.ComparisonFailure: expected:&lt;&quot;[H]&quot;&gt; but was:&lt;&quot;[S]&quot;&gt;
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at BlackjackTest.firstTurnWithTwoTwoAndDealerFive(BlackjackTest.java:344)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$2.run(TestWorker.java:176)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
</failure>
  </testcase>
  <testcase name="firstTurnWithFourTenAndDealerSix" classname="BlackjackTest" time="0.0"/>
  <testcase name="noBlackjackWithTwoAces" classname="BlackjackTest" time="0.001"/>
  <testcase name="correctParsesAce" classname="BlackjackTest" time="0.0"/>
  <testcase name="correctParsesSix" classname="BlackjackTest" time="0.0"/>
  <testcase name="correctParsesTen" classname="BlackjackTest" time="0.001"/>
  <testcase name="correctParsesTwo" classname="BlackjackTest" time="0.0"/>
  <testcase name="firstTurnWithNineTenAndDealerAce" classname="BlackjackTest" time="0.0"/>
  <testcase name="firstTurnWithKingAceAndDealerNine" classname="BlackjackTest" time="0.001"/>
  <testcase name="blackjackWithQueenAceSecond" classname="BlackjackTest" time="0.0"/>
  <testcase name="correctParsesFive" classname="BlackjackTest" time="0.0"/>
  <testcase name="correctParsesFour" classname="BlackjackTest" time="0.0"/>
  <testcase name="correctParsesJack" classname="BlackjackTest" time="0.0"/>
  <testcase name="correctParsesKing" classname="BlackjackTest" time="0.001"/>
  <testcase name="correctParsesNine" classname="BlackjackTest" time="0.0"/>
  <testcase name="firstTurnWithSixTenAndDealerSeven" classname="BlackjackTest" time="0.001"/>
  <testcase name="firstTurnWithTenAceAndDealerFive" classname="BlackjackTest" time="0.0"/>
  <testcase name="firstTurnWithFiveTenAndDealerSix" classname="BlackjackTest" time="0.0"/>
  <testcase name="firstTurnWithTwoThreeAndDealerQueen" classname="BlackjackTest" time="0.0"/>
  <testcase name="noBlackjackWithEightAndFive" classname="BlackjackTest" time="0.0"/>
  <testcase name="firstTurnWithThreeTenAndDealerQueen" classname="BlackjackTest" time="0.0"/>
  <testcase name="firstTurnWithThreeTenAndDealerSeven" classname="BlackjackTest" time="0.0"/>
  <testcase name="noBlackjackWithFive" classname="BlackjackTest" time="0.0"/>
  <testcase name="noBlackjackWithNine" classname="BlackjackTest" time="0.0"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
